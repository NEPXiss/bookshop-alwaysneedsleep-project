@startuml
class page.staffpage.staffcard.ItemCardController {
- Label titleLabel
- Label shelfLabel
- Label quantityLabel
- StoreItem storeItem
+ void setCard(StoreItem)
+ void onMouseClickTitleLabel()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class person.AdminAccount {
+ <<Create>> AdminAccount()
+ String getAccountType()
+ boolean deleteAccount()
}
class person.StaffAccount {
- int staffNumber
+ <<Create>> StaffAccount(String,String,int)
+ void addAccountToDataBase()
+ String getDisplayUsername()
+ String getAccountType()
+ int getStaffNumber()
}
interface usage.Registrable {
~ void addAccountToDataBase()
~ String getDisplayUsername()
}
enum usage.DeliveryStatus {
+  AWAITING
+  DELIVERED
+  CONFIRMED
}
class page.userpage.CheckOutPageController {
- Label orderingAsLabel
- Label totalPriceLabel
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- VBox cartBox
- Button placeOrderButton
- ImageView qrCodeImage
- TextField telephoneTextField
- TextArea addressTextArea
- Label alertLabel
+ void setPage()
+ void setCartBox()
+ void onPlaceOrderButtonClicked()
+ void returnToUserMainPage()
+ void onWishlistLabelClicked()
+ void onSearchButtonClicked()
+ void logOutLabelClicked()
+ void categoriesLabelClicked()
+ void userCartLabelClicked()
+ void onUserOrderLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.staffpage.OrderManagementPageController {
- VBox ordersBox
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- TextField searchTextField
- {static} OrderManagementPageController instance
+ <<Create>> OrderManagementPageController()
+ {static} OrderManagementPageController getInstance()
+ void setPage(String)
+ void setOrdersBox(String)
+ void onSetSearchBoxClicked()
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
class utils.GetAccess {
+ {static} boolean validateLogin(String,String)
+ {static} boolean isAccountExist(String)
}
class page.staffpage.staffcard.NewArrivalSearchCardController {
- Label titleLabel
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem)
+ void onMouseClickTitleLabel()
+ void addToNewArrivals()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.userpage.SearchPageController {
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- VBox searchBox
- Label searchResultAlert
- TextField searchTextField
- HBox topHBox
- ArrayList<StoreItem> searchedStoreItems
- {static} SearchPageController instance
+ <<Create>> SearchPageController()
+ {static} SearchPageController getInstance()
+ void setPage(String)
+ void setSearchBox(String)
+ void setSearchBoxByArrayList(ArrayList<StoreItem>)
+ ArrayList<StoreItem> getSearchedStoreItems()
+ void userCartLabelClicked()
+ void onWishlistLabelClicked()
+ void returnToUserMainPage()
+ void logOutLabelClicked()
+ void onUserOrderLabelClicked()
+ void onSearchButtonClicked()
+ void categoriesLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.login.RegistrationController {
- TextField usernameTextField
- PasswordField passwordTextField
- PasswordField passwordValidateTextField
- Button registerButton
- Label backButton
- Label messageAlert
- ImageView displayLogoImage
- {static} RegistrationController instance
+ <<Create>> RegistrationController()
+ {static} RegistrationController getInstance()
+ void setLogoImage()
+ void createNewUserAccount()
+ void backButtonClicked()
+ void onMouseEnterBackButton()
+ void onMouseExitBackButton()
}
class page.staffpage.staffcard.NewArrivalCardController {
- Label titleLabel
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem)
+ void onMouseClickTitleLabel()
+ void removeFromNewArrivals()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class store.StoreDataBase {
- HashMap<String,Account> accountMap
- {static} StoreDataBase storeDataBase
+ <<Create>> StoreDataBase()
+ HashMap<String,Account> getAccountMap()
+ {static} StoreDataBase getStoreAccountDataBase()
}
class page.card.WishlistCardController {
- Label titleLabel
- Label authorBrandLabel
- Label genreLabel
- Label unitPriceLabel
- ImageView itemImage
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem)
+ void setGenreLabel(ItemGenre)
+ void onMouseClickTitleLabel()
+ void onDeleteLabelClicked()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.card.SearchCardController {
- Label titleLabel
- Label authorBrandLabel
- Label genreLabel
- Label unitPriceLabel
- ImageView itemImage
- StoreItem storeItem
+ void setCard(StoreItem)
+ void setGenreLabel(ItemGenre)
+ void onMouseClickTitleLabel()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.userpage.UserOrderPageController {
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- TextField searchTextField
- VBox ordersBox
- {static} UserOrderPageController instance
+ <<Create>> UserOrderPageController()
+ {static} UserOrderPageController getInstance()
+ void setPage()
+ void setOrdersBox()
+ void returnToUserMainPage()
+ void onWishlistLabelClicked()
+ void onSearchButtonClicked()
+ void logOutLabelClicked()
+ void userCartLabelClicked()
+ void categoriesLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.staffpage.ProductManagementController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- VBox productBox
- TextField searchTextField
- {static} ProductManagementController instance
+ <<Create>> ProductManagementController()
+ {static} ProductManagementController getInstance()
+ void setPage(String)
+ void setProductBox(String)
+ void onSetSearchBoxClicked()
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void addNewProductButtonClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
class page.staffpage.staffcard.RecommSearchCardController {
- Label titleLabel
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem)
+ void onMouseClickTitleLabel()
+ void addToRecomm()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.card.OrderCardController {
- VBox detailBox
- Label orderIDLabel
- Label telephoneLabel
- TextArea addressTextArea
- Label priceLabel
- Label statusLabel
- Order order
+ void setCard(Order)
}
class page.adminpage.admincard.AccountDetailCardController {
- Label usernameLabel
- Label accountTypeLabel
- TextField usernameTextField
- HBox passwordHBox
- HBox buttonBox
- Button saveButton
- Button deleteButton
- HBox cardBox
- Button resetButton
- Account account
+ void setCard(Account)
+ void onSaveButtonClicked()
+ void onResetButtonClicked()
+ void onDeleteButtonClicked()
}
class page.staffpage.NewItemPageController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- ImageView itemImage
- TextField productTextField
- TextField authorBrandTextField
- TextField priceTextField
- TextField quantityTextField
- TextField locationTextField
- TextArea descriptionTextArea
- Label imagePathLabel
- ChoiceBox<ItemGenre> genreChoiceBox
- ChoiceBox<String> ratingChoiceBox
- {static} NewItemPageController instance
+ <<Create>> NewItemPageController()
+ {static} NewItemPageController getInstance()
+ void setPage()
+ void onSaveButtonClicked()
+ void onChangeImageButtonClicked()
+ void backButtonClicked()
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
abstract class page.staffpage.StaffPage {
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void goToProductManagementPage()
+ void goToUserPageManagementPage()
+ void goToOrderManagementPage()
}
class page.adminpage.NewAccountPageController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- TextField usernameTextField
- TextField passwordTextField
- TextField staffNumberTextField
- ChoiceBox<String> accountTypeBox
- {static} NewAccountPageController instance
+ <<Create>> NewAccountPageController()
+ {static} NewAccountPageController getInstance()
+ void setPage()
+ void onCreateAccountButtonClicked()
+ void backToAdminMainPage()
+ void logOutLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
interface usage.Orderable {
~ boolean isOrderable()
~ String getFullDescription()
}
class page.userpage.CategoriesPageController {
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- TextField searchTextField
- VBox categoriesBox
- {static} CategoriesPageController instance
+ <<Create>> CategoriesPageController()
+ {static} CategoriesPageController getInstance()
+ void setPage()
+ void returnToUserMainPage()
+ void onSearchButtonClicked()
+ void logOutLabelClicked()
+ void userCartLabelClicked()
+ void onWishlistLabelClicked()
+ void onUserOrderLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.login.StaffLogInController {
- TextField usernameTextField
- PasswordField logInPasswordField
- Button staffSignInButton
- Label signInAsUserButton
- Label staffLogInMessageLabel
- ImageView displayLogoImage
- {static} StaffLogInController instance
+ <<Create>> StaffLogInController()
+ {static} StaffLogInController getInstance()
+ void setLogoImage()
+ void staffSignInButtonClicked()
+ void setSignInAsUserButtonClicked()
+ void onMouseEnterSignInAsUserButton()
+ void onMouseExitSignInAsUserButton()
}
abstract class base.StoreItem {
- int quantity
- String itemLocation
- String title
- Image image
- ItemGenre itemGenre
- double price
- String authorBrand
- String imagePath
- int rating
- String description
+ <<Create>> StoreItem(String,String,ItemGenre,double,int,int,String,String,String)
+ void removeItself()
+ boolean isOrderable()
+ void setImageByPath(String)
+ int getQuantity()
+ void setPrice(double)
+ String getItemLocation()
+ void setQuantity(int)
+ void setItemLocation(String)
+ String getTitle()
+ void setTitle(String)
+ ItemGenre getItemGenre()
+ double getPrice()
+ String getAuthorBrand()
+ void setAuthorBrand(String)
+ int getRating()
+ Image getImage()
+ String getImagePath()
+ void setImage(Image)
+ void setItemGenre(ItemGenre)
+ void setRating(int)
+ String getDescription()
+ void setDescription(String)
+ String getFullDescription()
}
class utils.Config {
+ {static} String adminUsernane
+ {static} String adminPassword
+ {static} String profileImage
+ {static} String logoImage1
+ {static} String logoImage2
}
class page.staffpage.staffcard.RecommCardController {
- Label titleLabel
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem)
+ void onMouseClickTitleLabel()
+ void removeFromRecommCard()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.userpage.BookPageController {
- ImageView wishlistIcon
- HBox moreFromThisBox
- ImageView storeItemImage
- Label titleLabel
- Label authorBrandLabel
- Text descriptionText
- Label availableLabel
- ChoiceBox<String> quantityBox
- Label priceLabel
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- Label backLabel
- Label quantityBoxAlert
- TextField searchTextField
- Label addToWishlistLabel
- String[] quantity
- StoreItem storeItem
- {static} BookPageController instance
+ <<Create>> BookPageController()
+ {static} BookPageController getInstance()
+ void setPage(StoreItem)
+ void setMoreFromThisBox(StoreItem)
+ void userCartLabelClicked()
+ void onSearchButtonClicked()
+ void returnToUserMainPage()
+ void logOutLabelClicked()
+ void onUserOrderLabelClicked()
+ void onWishlistLabelClicked()
+ void categoriesLabelClicked()
+ void onQuantityBoxSelected()
+ void onAddToWishlistLabelClicked()
+ void onEnterAddToWishlistLabel()
+ void onExitAddToWishlistLabel()
+ void onMouseEnterBackLabel()
+ void onMouseExitBackLabel()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.adminpage.AdminMainPageController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- VBox accountBox
- TextField searchTextField
- {static} AdminMainPageController instance
+ <<Create>> AdminMainPageController()
+ {static} AdminMainPageController getInstance()
+ void setPage(String)
+ void setAccountBox(String)
+ void onSetSearchBoxClicked()
+ void onAddNewAccountButtonClicked()
+ VBox getAccountBox()
+ void logOutLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
class store.Order {
- String username
- HashMap<StoreItem,Integer> orderItems
- double totalCost
- String telNumber
- String deliveryAddress
- DeliveryStatus deliveryStatus
+ <<Create>> Order(String,HashMap<StoreItem,Integer>,double,String,String)
+ DeliveryStatus getDeliveryStatus()
+ void setDeliveryStatus(DeliveryStatus)
+ String getTelNumber()
+ String getUsername()
+ void setUsername(String)
+ HashMap<StoreItem,Integer> getOrderItems()
+ double getTotalCost()
+ String getDeliveryAddress()
}
class page.card.ExclusiveCardController {
- HBox itemCard
- ImageView itemImage
- Label itemTitleLabel
- Label authorBrandLabel
- Label genreLabel
- Label priceLabel
- Label starLabel
- StoreItem storeItem
- {static} ExclusiveCardController instance
+ <<Create>> ExclusiveCardController()
+ void setCard(StoreItem)
+ StoreItem getStoreItem()
+ void setItemImage(Image)
+ void setItemTitleLabel(String)
+ void setAuthorBrandLabel(String)
+ void setGenreLabel(ItemGenre)
+ void setPriceLabel(double)
+ void setStarLabel(int)
+ void onMouseClickTitleLabel()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
enum usage.ItemGenre {
+  FICTION
+  HISTORY
+  PHILOSOPHY
+  PSYCHOLOGY
+  EDUCATION
+  SCIENCE
}
class utils.DatabaseInitializer {
+ {static} void initializeDataBase()
}
class page.userpage.UserMainPageController {
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- HBox newArrivalsPane
- GridPane recommendedItemsPane
- ImageView topLeftIconLogo
- TextField searchTextField
- {static} UserMainPageController instance
+ <<Create>> UserMainPageController()
+ {static} UserMainPageController getInstance()
+ void setPage()
+ void setNewArrivals()
+ void setRecommendedItems()
+ void userCartLabelClicked()
+ void logOutLabelClicked()
+ void onSearchButtonClicked()
+ void onWishlistLabelClicked()
+ void categoriesLabelClicked()
+ void onUserOrderLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.staffpage.UserPageManagementController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- TextField newArrivalSearchTextField
- Button newArrivalSearchButton
- TextField recommTextField
- Button recommSearchButton
- VBox newArrivalBox
- VBox newArrivalSearchBox
- VBox recommBox
- VBox recommSearchBox
- {static} UserPageManagementController instance
+ <<Create>> UserPageManagementController()
+ {static} UserPageManagementController getInstance()
+ void setPage()
+ void reloadNewArrivalBox(String)
+ void reloadRecommBox(String)
+ void onNewArrivalSearchButtonClicked()
+ void onRecommSearchButtonClicked()
+ VBox getNewArrivalBox()
+ VBox getRecommBox()
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
class page.userpage.CartPageController {
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- VBox cartBox
- Label totalPriceLabel
- TextField searchTextField
- Label proceedToCheckOutLabel
- {static} CartPageController instance
+ <<Create>> CartPageController()
+ {static} CartPageController getInstance()
+ void setPage()
+ VBox getCartBox()
+ Label getTotalPriceLabel()
+ void reloadCartBox()
+ void returnToUserMainPage()
+ void onWishlistLabelClicked()
+ void onUserOrderLabelClicked()
+ void onSearchButtonClicked()
+ void logOutLabelClicked()
+ void categoriesLabelClicked()
+ void onProceedToCheckOutLabelClicked()
+ void onMouseEnterCheckOutLabel()
+ void onMouseExitCheckOutLabel()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class page.staffpage.StaffMainPageController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- Label productManagementLabel
- Label userpageManagementLabel
- Label orderManagementLabel
- {static} StaffMainPageController instance
+ <<Create>> StaffMainPageController()
+ {static} StaffMainPageController getInstance()
+ void setPage()
+ void logOutLabelClicked()
+ void goToUserPageManagementPage()
+ void goToOrderManagementPage()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onEnterProductLabel()
+ void onExitProductLabel()
+ void onEnterOrderLabel()
+ void onExitOrderLabel()
+ void onEnterUserLabel()
+ void onExitUserLabel()
}
class page.staffpage.ItemStaffPageController {
- Label logOutLabel
- ImageView profileAvatarIcon
- Label usernameLabel
- ImageView topLeftIconLogo
- {static} ItemStaffPageController instance
- StoreItem storeItem
- ImageView itemImage
- TextField productTextField
- TextField authorBrandTextField
- TextField priceTextField
- TextField quantityTextField
- TextField locationTextField
- TextArea descriptionTextArea
- Label imagePathLabel
- ChoiceBox<ItemGenre> genreChoiceBox
- ChoiceBox<String> ratingChoiceBox
+ <<Create>> ItemStaffPageController()
+ {static} ItemStaffPageController getInstance()
+ void setPage(StoreItem)
+ void onChangeImageButtonClicked()
+ void onSaveButtonClicked()
+ void onDeleteProductButtonClicked()
+ void logOutLabelClicked()
+ void topLeftLabelClicked()
+ void backButtonClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
}
class item.Book {
+ <<Create>> Book(String,String,ItemGenre,double,int,int,String,String,String)
+ String getFullDescription()
}
class page.login.LoginController {
- TextField usernameTextField
- PasswordField logInPasswordField
- Label signInAsStaffButton
- Label logInMessageLabel
- ImageView displayLogoImage
- {static} LoginController instance
+ <<Create>> LoginController()
+ {static} LoginController getInstance()
+ void setLogoImage()
+ void signInButtonClicked()
+ void setSignInAsStaffButtonClicked()
+ void registerButtonClicked()
+ void onMouseEnterSignInAsStaffButton()
+ void onMouseExitSignInAsStaffButton()
}
abstract class page.userpage.UserPage {
+ void setPage()
+ void setPage(String)
+ void setPage(StoreItem)
+ void userCartLabelClicked()
+ void logOutLabelClicked()
+ void onUserOrderLabelClicked()
+ void onWishlistLabelClicked()
+ void categoriesLabelClicked()
+ void returnToUserMainPage()
}
class page.staffpage.staffcard.StaffOrderCardController {
- ChoiceBox<DeliveryStatus> statusChoiceBox
- Label newStatusAlertLabel
- Label orderIDLabel
- Label telephoneLabel
- TextArea addressTextArea
- Label priceLabel
- VBox detailBox
- Order order
+ void setCard(Order)
+ void onSaveButtonClicked()
+ void onResetButtonClicked()
}
class page.userpage.WishlistPageController {
- VBox wishlistBox
- Label usernameLabel
- Label logOutLabel
- Label cartLabel
- Label categoriesLabel
- Label wishlistLabel
- Label userOrdersLabel
- ImageView profileAvatarIcon
- ImageView topLeftIconLogo
- TextField searchTextField
- {static} WishlistPageController instance
+ <<Create>> WishlistPageController()
+ {static} WishlistPageController getInstance()
+ void setPage()
+ VBox getWishlistBox()
+ void reloadWishlistBox()
+ void returnToUserMainPage()
+ void onSearchButtonClicked()
+ void onUserOrderLabelClicked()
+ void logOutLabelClicked()
+ void userCartLabelClicked()
+ void categoriesLabelClicked()
+ void onMouseEnterLogOutButton()
+ void onMouseExitLogOutButton()
+ void onMouseEnterCartButton()
+ void onMouseExitCartButton()
+ void onMouseEnterCategoriesButton()
+ void onMouseExitCategoriesButton()
+ void onMouseEnterWishListButton()
+ void onMouseExitWishListButton()
+ void onMouseEnterUserOrdersButton()
+ void onMouseExitUserOrdersButton()
}
class store.ProgramController {
- Account enteredAccount
- {static} ProgramController instance
+ <<Create>> ProgramController()
+ Account getEnteredAccount()
+ void setEnteredAccount(Account)
+ {static} ProgramController getInstance()
}
class store.StoreStorage {
- HashMap<StoreItem,String> shelfMap
- ArrayList<StoreItem> newArrivalList
- ArrayList<StoreItem> recommendedItemsList
- {static} StoreStorage storeStorage
- ArrayList<Order> orderArrayList
+ <<Create>> StoreStorage()
+ {static} StoreStorage getStorage()
+ ArrayList<Order> getOrderArrayList()
+ HashMap<StoreItem,String> getShelfMap()
+ ArrayList<StoreItem> getNewArrivalList()
+ ArrayList<StoreItem> getRecommendedItemsList()
}
class person.UserAccount {
- ArrayList<Order> orderList
- HashMap<StoreItem,Integer> cartMap
- ArrayList<StoreItem> wishList
+ <<Create>> UserAccount(String,String)
+ String getDisplayUsername()
+ String getAccountType()
+ ArrayList<Order> getOrderList()
+ HashMap<StoreItem,Integer> getCartMap()
+ ArrayList<StoreItem> getWishList()
+ void addAccountToDataBase()
}
class application.Main {
- {static} Stage stg
- {static} Main instance
+ {static} void main(String[])
+ void start(Stage)
+ {static} Main getInstance()
+ void changeScene(String)
}
class page.card.CartCardController {
- Label titleLabel
- Label authorBrandLabel
- Label genreLabel
- Label unitPriceLabel
- Label quantityLabel
- Label totalPriceLabel
- ImageView itemImage
- HBox cardBox
- StoreItem storeItem
+ void setCard(StoreItem,int)
+ void setGenreLabel(ItemGenre)
+ void onDeleteLabelClicked()
+ void onMouseClickTitleLabel()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.card.OrderDetailCardController {
- Label titleLabel
- Label authorBrandLabel
- Label genreLabel
- Label quantityLabel
- Label totalPriceLabel
- ImageView itemImage
- StoreItem storeItem
+ void setCard(StoreItem,int)
+ void onMouseClickTitleLabel()
+ void setGenreLabel(ItemGenre)
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
class page.card.CardController {
- ImageView itemImage
- Label authorBrandLabel
- Label titleLabel
- Label starLabel
- Label priceLabel
- StoreItem storeItem
+ void setCard(StoreItem)
+ StoreItem getStoreItem()
+ void setItemImage(Image)
+ void setItemTitleLabel(String)
+ void setAuthorBrandLabel(String)
+ void setStarLabel(int)
+ void setPriceLabel(double)
+ void onMouseClickTitleLabel()
+ void onEnterTitleLabel()
+ void onExitTitleLabel()
}
abstract class base.Account {
- String username
- String password
+ <<Create>> Account(String,String)
+ String getUsername()
+ String getDisplayUsername()
+ void setUsername(String)
+ String getPassword()
+ void setPassword(String)
+ String getAccountType()
+ boolean deleteAccount()
}
class page.userpage.components.SearchFilter {
- ChoiceBox<String> filterChoiceBox
- Label searchLabel
- {static} SearchFilter instance
+ <<Create>> SearchFilter()
+ {static} SearchFilter getInstance()
+ void setFilterChoiceBox()
+ void onSearchFilterClicked()
+ ArrayList<StoreItem> getFilteredListOfStoreItems()
+ void onEnterSearchLabel()
+ void onExitSearchLabel()
}
class page.card.CategoriesCardController {
- Label genreLabel
- ImageView genreIcon
+ void setCard(String,String)
+ void onGenreLabelClicked()
+ void onEnterGenreLabel()
+ void onExitGenreLabel()
}


page.card.WishlistCardController <|-- page.staffpage.staffcard.ItemCardController
base.Account <|-- person.AdminAccount
usage.Registrable <|.. person.StaffAccount
base.Account <|-- person.StaffAccount
page.userpage.CartPageController <|-- page.userpage.CheckOutPageController
page.staffpage.StaffPage <|-- page.staffpage.OrderManagementPageController
page.staffpage.staffcard.NewArrivalCardController <|-- page.staffpage.staffcard.NewArrivalSearchCardController
page.userpage.UserPage <|-- page.userpage.SearchPageController
page.card.WishlistCardController <|-- page.staffpage.staffcard.NewArrivalCardController
page.userpage.UserPage <|-- page.userpage.UserOrderPageController
page.staffpage.StaffPage <|-- page.staffpage.ProductManagementController
page.staffpage.staffcard.RecommCardController <|-- page.staffpage.staffcard.RecommSearchCardController
page.staffpage.ItemStaffPageController <|-- page.staffpage.NewItemPageController
page.userpage.UserPage <|-- page.userpage.CategoriesPageController
usage.Orderable <|.. base.StoreItem
page.card.WishlistCardController <|-- page.staffpage.staffcard.RecommCardController
page.userpage.UserPage <|-- page.userpage.BookPageController
page.userpage.UserPage <|-- page.userpage.UserMainPageController
page.staffpage.StaffPage <|-- page.staffpage.UserPageManagementController
page.userpage.UserPage <|-- page.userpage.CartPageController
page.staffpage.StaffPage <|-- page.staffpage.StaffMainPageController
page.staffpage.StaffPage <|-- page.staffpage.ItemStaffPageController
base.StoreItem <|-- item.Book
page.userpage.UserPage <|-- page.userpage.WishlistPageController
usage.Registrable <|.. person.UserAccount
base.Account <|-- person.UserAccount
javafx.application.Application <|-- application.Main
@enduml